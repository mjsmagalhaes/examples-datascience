neste vídeo vamos cobrir regressão polinomial e dutos 
o que fazemos quando um modelo linear não é o melhor apto para nossos dados vamos analisar outro tipo de modelo de regressão a regressão polinomial transformamos nossos dados em um polinômio então use regressão linear para ajustar os parâmetros que discutiremos dutos oleodutos são maneira de simplificar seu código 
regressão polinomial é um caso especial da regressão linear geral este método é benéfico para descrever relações curvilinear o que é um relacionamento curvilinear é o que você consegue ao squaring ou configurar termos de ordem superior das variáveis do preditor no modelo transformando os dados o modelo pode ser quadrático o que significa que a variável de preditor no modelo é quadrado usamos um suporte para indicado como expoente esta é a regressão polinomial de segunda ordem com uma figura representando a função 
o modelo pode ser cúbico o que significa que a variável preditadora é fofa esta é a terceira regressão polinomial de ordem que vemos examinando a figura que a função tem mais variação 
também existe regressões polinomiais de ordem mais alta quando um bom encaixe não foi alcançado por segunda ou terceira ordem podemos ver em números o quanto os gráficos mudam quando alteramos a ordem da regressão polinomial o grau da regressão faz uma grande diferença e pode resultar em um melhor ajuste se você escolher o valor certo em todos os casos a relação entre a variável no parâmetro é sempre linear 
vejamos um exemplo a partir de nossos dados geramos um modelo de regressão polinomial 
em python fazemos isso usando a função poly fit neste exemplo desenvolvemos uma base de modelo de regressão polinomial de terceira ordem podemos imprimir o formulário simbólico do modelo para o modelo é dado pela expressão a seguir 
negativo um ponto cinco cinco sete X. um fofo mais duzentos quatro ponto oito X. um quadrado mais oito mil novecentos sessenta cinco X. um mais um ponto três vezes dez a potência de cinco podemos também ter a regressão linear multi-dimensional a expressão pode ficar complicada aqui são apenas alguns dos termos para duas dimensões dimensional polinomial Nenhuma função pies poly fit função não pode executar este tipo de regressão usamos o pré-processamento bibliotecário scikit aprender a criar um objeto de recurso polinomial o construtor leva o grau do polinomial como parâmetro então nós transformar os recursos em um recurso polinomial com o método de transformação de underscore fit let's do um exemplo mais intuitivo 
considerar o recurso mostrado aqui aplicando o método nós transformamos os dados temos agora um novo conjunto de recursos que são transformados versão de nossos recursos originais como que eu menciono dos dados fica maior podemos querer normalizar diversos recursos como scikit aprender em vez disso podemos padronizar muitas tarefas por exemplo podemos padronizar cada recurso simultaneamente nós importamos escaler padrão nós treinamos o objeto fit o objeto de escala então transforme os dados em um novo quadro de dados em uma taxa X. Escala de pontuação há mais métodos de normalização disponíveis na biblioteca de pré-processamento também como outras transformações podemos simplificar nosso código usando uma biblioteca de pipeline há muitas etapas para obter uma previsão por exemplo normalização polinomial transformação e regressão linear nós simplificamos o processo usando um pipeline 
pipeline sequencialmente realizar uma série de transformações a última etapa realiza uma previsão primeiro importamos todos os módulos que precisamos então importamos o pipeline da biblioteca criamos uma lista de topples o primeiro elemento no topo contém o nome do estimador modelo o segundo elemento contém construtora modelo nós entramos a lista na construtora pipeline nós agora temos um objeto pipeline podemos treinar o pipeline aplicando o método do trem para o objeto pipeline podemos também produzir uma predição também 
o método normaliza os dados realiza uma transformação polinomial então supera uma predição 
